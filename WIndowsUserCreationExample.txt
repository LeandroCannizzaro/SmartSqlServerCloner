public static bool CreateLocalWindowsAccount(string username, string password, string displayName, string description, bool canChangePwd, bool pwdExpires)
    {

        try
        {
            PrincipalContext context = new PrincipalContext(ContextType.Machine);
            UserPrincipal user = new UserPrincipal(context);
            user.SetPassword(password);
            user.DisplayName = displayName;
            user.Name = username;
            user.Description = description;
            user.UserCannotChangePassword = canChangePwd;
            user.PasswordNeverExpires = pwdExpires;
            user.Save();


            //now add user to "Users" group so it displays in Control Panel
            GroupPrincipal group = GroupPrincipal.FindByIdentity(context, "Users");
            group.Members.Add(user);
            group.Save();

            return true;
        }
        catch (Exception ex)
        {
            LogMessageToFile("error msg" + ex.Message);
            return false;
        }

    }
    
    DirectoryEntry AD = new DirectoryEntry("WinNT://" + Environment.MachineName + ",computer");
 DirectoryEntry administrators = AD.Children.Find("Administrators", "group");
 DirectoryEntry iusr = AD.Children.Find(@"NT AUTHORITY\IUSR", "user");

 administrators.Invoke("Add", new object[] {iusr.Path.ToString()});
 
 
 using System;
using System.DirectoryServices;

class Class1
{
    static void Main(string[] args)
    {
    try
        {
	 DirectoryEntry AD = new DirectoryEntry("WinNT://" + 
	                     Environment.MachineName + ",computer");
	 DirectoryEntry NewUser = AD.Children.Add("TestUser1", "user");
	 NewUser.Invoke("SetPassword", new object[] {"#12345Abc"});
	 NewUser.Invoke("Put", new object[] {"Description", "Test User from .NET"});
	 NewUser.CommitChanges();
	 DirectoryEntry grp;

	 grp = AD.Children.Find("Guests", "group");
	 if (grp != null) {grp.Invoke("Add", new object[] {NewUser.Path.ToString()});}
	 Console.WriteLine("Account Created Successfully");
	 Console.ReadLine();
	}
    catch (Exception ex)
	{
	 Console.WriteLine(ex.Message);
	 Console.ReadLine();

	}
    }
}